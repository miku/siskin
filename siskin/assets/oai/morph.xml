<?xml version="1.0" encoding="UTF-8"?>
<metamorph xmlns="http://www.culturegraph.org/metamorph" version="1">
  <rules>
    <data source="metadata.dc.description.value" name="abstract"/>
    <!-- Abstract -->
    <entity name="authors[]" flushWith="record">
      <!-- Author -->
      <entity name="">
        <!-- in oai:dc there is only dc:creator -->
        <data source="metadata.dc.creator.value" name="rft.au"/>
      </entity>
    </entity>
    <entity name="languages[]" flushWith="record">
      <!-- Languages -->
      <choose>
        <!-- try to map language -->
        <data source="metadata.dc.language.value">
          <lookup in="sprachliste"/>
        </data>
        <!-- default source value -->
        <data source="metadata.dc.language.value">
                    </data>
      </choose>
    </entity>
    <entity name="url[]" flushWith="record">
      <!-- URL -->
      <data source="metadata.dc.identifier.value">
        <regexp match="^(http.*)" format="${1}"/>
      </data>
    </entity>
    <choose>
      <data source="metadata.dc.type.value" name="finc.format">
        <!-- Format -->
        <lookup in="formatliste"/>
      </data>
      <data name="finc.format" source="_id">
        <!-- receive default format -->
        <constant value="$[format]"/>
      </data>
      <data source="metadata.dc.type.value" name="finc.format">
        <!-- Default = Format from Source -->
      </data>
    </choose>
    <entity name="finc.mega_collection[]" flushWith="record">
      <data source="_id">
        <constant value="$[mega_collection]"/>
      </data>
    </entity>
    <!-- Record-ID  -->
    <data source="header.identifier.value" name="finc.record_id" />
    <combine name="finc.id" value="ai-$[sid]-${identifier_key}">
      <data source="header.identifier.value" name="identifier_key">
        <script file="$[FLUX_DIR]/../js/btoa.js" invoke="b64URLEncode"/>
      </data>
      <!-- <data source="header.identifier.value" name="identifier_key">
                    <regexp match="^(oai:).*\/(\d.*)$" format="${2}"/>
                </data>  -->
    </combine>
    <data source="_id" name="finc.source_id">
      <!-- receive SID -->
      <constant value="$[sid]"/>
    </data>
    <data source="metadata.dc.title.value" name="rft.atitle">
      <!-- aTitle -->
    </data>
    <data source="metadata.dc.date.value" name="rft.date">
      <!-- Date -->
    </data>
    <data source="metadata.dc.date.value" name="x.date">
      <!-- x.Date -->
      <compose postfix="T00:00:00Z"/>
    </data>
    <entity name="rft.issn[]" flushWith="record">
      <!-- ISSN -->
      <data source="metadata.dc.source.value">
        <unique/>
        <regexp match="^[0-9]{4}-[0-9]{3}[0-9X]$"/>
      </data>
    </entity>
    <combine name="rft.jtitle" value="${jtitle}" reset="true" sameEntity="true">
      <!-- Journal Title -->
      <data source="metadata.dc.source.lang" name="lang"> 
                </data>
      <data source="metadata.dc.source.value" name="jtitle">
        <regexp match="^(.*);\s(.*);\s(.*)$" format="${1}"/>
      </data>
    </combine>
    <entity name="rft.pub[]" flushWith="record">
      <!-- Publisher -->
      <data source="metadata.dc.publisher.value">
                </data>
    </entity>
    <data source="metadata.dc.source.value" name="rft.volume">
      <!-- Volume -->
      <regexp match="^(.*;\s)(.*)\s\(\d\d\d\d\);\s(.*)$" format="${2}"/>
    </data>
    <entity name="x.subjects[]" flushWith="record">
      <!-- Subjects -->
      <data source="metadata.dc.subject.value" name="type">
        <split delimiter=","/>
        <trim/>
      </data>
    </entity>
    <data source="metadata.dc.type.value" name="rft.genre">
      <!-- Genre -->
      <lookup in="genre_liste"/>
    </data>
    <data source="metadata.dc.identifier.value" name="doi">
      <regexp match="^doi:(.*)" format="${1}"/>
    </data>
  </rules>
  <maps>
    <filemap name="formatliste" files="$[MAP_DIR]filemap_fincformat.tsv" separator="\t"/>
    <filemap name="genre_liste" files="$[MAP_DIR]filemap_rft.genre.tsv" separator="\t"/>
    <filemap name="sprachliste" files="$[MAP_DIR]sprachliste.tsv" separator="\t"/>
  </maps>
</metamorph>
