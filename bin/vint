#!/usr/bin/env python
# coding: utf-8

from __future__ import print_function
from siskin import __version__
from siskin.utils import generate_tasks_manual
from siskin.utils import get_task_import_cache
import click
import importlib
import luigi
import os
import subprocess
import sys

@click.group()
def cli():
    pass

@click.argument('taskname', nargs=-1, type=click.UNPROCESSED)
@cli.command(context_settings=dict(
    ignore_unknown_options=True,
))
def do(taskname):
    task_import_cache, path = get_task_import_cache()
    if taskname in task_import_cache:
        importlib.import_module(task_import_cache[taskname])
    else:
        try:
            os.remove(path)
        except OSError:
            pass

        from siskin import sources
        locals().update(sources.__dict__)
        from siskin import workflows
        locals().update(workflows.__dict__)

    sys.argv = [sys.argv[0]] + sys.argv[2:]
    luigi.run()

@cli.command()
def hello():
    click.echo("Welcome to vint.")

@cli.command()
def version():
    click.echo(__version__)

@cli.command()
def names():
    task_import_cache, _ = get_task_import_cache()
    for name in sorted(task_import_cache.keys()):
        print(name)

@cli.command()
def man():
    try:
        pager = subprocess.Popen(['less', '-FRSXK'], stdin=subprocess.PIPE, stdout=sys.stdout)
        pager.communicate(generate_tasks_manual())
    except KeyboardInterrupt:
        pass

if __name__ == '__main__':
    cli()
