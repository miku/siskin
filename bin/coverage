#!/usr/bin/env python
# coding: utf-8

# Copyright 2016 by Leipzig University Library, http://ub.uni-leipzig.de
#                   The Finc Authors, http://finc.info
#                   Martin Czygan, <martin.czygan@uni-leipzig.de>
#
# This file is part of some open source application.
#
# Some open source application is free software: you can redistribute
# it and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation, either
# version 3 of the License, or (at your option) any later version.
#
# Some open source application is distributed in the hope that it will
# be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
#
# @license GPL-3.0+ <http://spdx.org/licenses/GPL-3.0+>

"""
For each ISSN in a file (e.g. from KBART), see, if we have an entry in AI.

    $ python coverage.py -f list_of_issns.txt
"""

from __future__ import print_function

import argparse
import csv
import sys

import luigi

from siskin.sources.crossref import CrossrefISSNList
from siskin.sources.degruyter import DegruyterISSNList
from siskin.sources.doaj import DOAJISSNList
from siskin.sources.elsevierjournals import ElsevierJournalsISSNList
from siskin.sources.gbi import GBIISSNList
from siskin.sources.jstor import JstorISSNList
from siskin.sources.thieme import ThiemeISSNList


def loadset(filename):
    """
    Load each line of file given by filename into a set.
    """
    s = set()

    with open(filename) as handle:
        for line in handle:
            value = line.strip()
            if value:
                s.add(value)
    return s

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-f', '--file', required=True, metavar='LIST OF ISSNS', help='list of ISSNs to check for membership in index')

    args = parser.parse_args()

    given = loadset(args.file)
    print("%d issns from file" % len(given), file=sys.stderr)

    tasks = [
        CrossrefISSNList(),
        DegruyterISSNList(),
        DOAJISSNList(),
        ElsevierJournalsISSNList(),
        GBIISSNList(),
        JstorISSNList(),
        ThiemeISSNList(),
    ]
    luigi.build(tasks)

    issns = dict()

    for task in tasks:
        print("loading from %s" % task.output().path, file=sys.stderr)
        issns[task.TAG] = loadset(task.output().path)

    for issn in given:
        tags = []
        for tag, issnset in issns.iteritems():
            if issn in issnset:
                tags.append(tag)

        if len(tags) > 0:
            print("OKAI\t%s\t%s" % (issn, "|".join(tags)))
        else:
            print("MISS\t%s\tMISS" % issn)
