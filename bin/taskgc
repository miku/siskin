#!/bin/bash

# Copyright 2020 by Leipzig University Library, http://ub.uni-leipzig.de
#                   The Finc Authors, http://finc.info
#                   Martin Czygan, <martin.czygan@uni-leipzig.de>
#
# This file is part of some open source application.
#
# Some open source application is free software: you can redistribute
# it and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation, either
# version 3 of the License, or (at your option) any later version.
#
# Some open source application is distributed in the hope that it will
# be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
#
# @license GPL-3.0+ <http://spdx.org/licenses/GPL-3.0+>

# Cleanup obsolete task artifacts.
#
# Will delete all artifacts of configured tasks, except those having the date of the current month.

set -e -u -o pipefail

CO='\033[0;33m'
NC='\033[0m'

taskhome=$(taskhome) # Root directory of outputs.

# Note that find wants these directories to exists, so the task names must match.
declare -A tasks
tasks=(
	["ai"]="AIApplyOpenAccessFlag AIExport AIIntermediateSchema AIIntermediateSchemaDeduplicated AILicensing AILocalData AIRedact"
	["28"]="DOAJIntermediateSchemaDirty DOAJIntermediateSchema DOAJHarvest DOAJDownloadDump DOAJTable"
	["49"]="CrossrefUniqItems CrossrefIntermediateSchema"
	["55"]="JstorXML JstorIntermediateSchemaGenericCollection JstorIntermediateSchema JstorMembers JstorLatestMembers"
	["85"]="ElsevierJournalsIntermediateSchema ElsevierJournalsUpdatesIntermediateSchema"
	["89"]="IEEEUpdatesIntermediateSchema IEEEIntermediateSchema"
)

# Check whether there is anything to delete at all.
found=$(for src in "${!tasks[@]}"; do
	for t in ${tasks[$src]}; do
		find "$taskhome/$src/$t" -type f -and -not -name "$(date +'date-%Y-%m-*')"
	done
done | wc -l)

if [ "$found" -eq "0" ]; then
	echo "Nothing to delete. Bye."
	exit 0
fi

# Just print out all files.
for src in "${!tasks[@]}"; do
	for t in ${tasks[$src]}; do
		find "$taskhome/$src/$t" -type f -and -not -name "$(date +'date-%Y-%m-*')"
	done
done

# Calculate aggregate filesize (GB).
freed=$(for src in "${!tasks[@]}"; do
	for t in ${tasks[$src]}; do
		find "$taskhome/$src/$t" -type f -not -name "$(date +'date-%Y-%m-*')" -exec stat --printf="%s\n" {} \;
	done
done | paste -sd+ | awk '{ print "scale=2; ("$0") / 1073741824"}' | bc -ql)

echo
echo -e -n "Delete the above ${found} file(s) [yN] [${CO}${freed}GB${NC} would be freed]?"
read -r answer
if [ "$answer" != "${answer#[Yy]}" ]; then
	for src in "${!tasks[@]}"; do
		for t in ${tasks[$src]}; do
			find "$taskhome/$src/$t" -type f -not -name "$(date +'date-%Y-%m-*')" -exec rm -vf {} \;
		done
	done
else
	echo "Not deleting anything. Bye."
fi
